cat notes.txt
# the cat command exports the output to the terminal

ll
#short cut for the long list

history >> notes.txt

# the >> copies the output into the document w/o overwriting

history | sort > notes.txt
# the single > overwrites the output from the command to the file

sort > notes.txt
# the sort command sorts the output alphabetically

open notes.txt
# the open command does just that, opens the file

rm notes.txt
#rm removes the target, file or directory

man ls
#man command opens the manual of commands that can be entered

touch notes.txt
#touch creates a file with the name you specify

cd notebook/
#cd changes the directory to the one you specify, .. is up a level, and just plain old cd will take you to the home directory

mkdir notebook
#mkdir makes a new directory with the name that you specify


clear
#clear cleans up the terminal, blanks it

tree
#shows a tree of the directory

cd Application\ Support/
#the \ is a space that you can enter as part of the file name or directory so that the terminal doesnt think that you are entering a new command as part of a chain

/Library/
..
.
/Java
open hiking_sunny.jpg
cd Downloads/
cd com.apple.ichat
l
cd Caches/
cd ..
cd GameKit/
cd Library/
cd Movies/
cd m
cd Library/ls
cd Desktop/
cd prework/
Users/
cc
cd /Users/
cd /Us
cd users
users
d
cd ~
cd /
~
cd /Applications/
pwd
cleal
cd Contents/
cd Chess.app/
ls -l
tree -L 1
brew install tree
rm -rf /Library/Caches/Homebrew/tree-1.7.0.tgz
ls .config/fish/
which fish
ls -a
-a
ls -l@
ls -R
ls -i
ls -F
-F
ls -w
ls -@l
ls -@
ls -r
ls -t
ls -tr
ls -rt
ls -tls
ls -s
ls -lt
open /users/seanstokke/
open ~
open
open .
echo ~
which whoami
whoami
whereami
whoareyou
surge
su
git commit -m "Cname"
git add -A
git a
open http://codingtater.surge.sh
git commit -m "Cap name"
git
git status
surge path/to/my-project
git commit -m "Add CNAME"
git add CNAME
atom CNAME
touch CNAME
open index.html
git commit -m "Said hi to myself"
git add index.html
atom .
atom
touch index.html
git init
cd CodingTater.surge.sh/
mkdir CodingTater.surge.sh
cd ~/Projects/
mkdir ~/Projects
surge -V
npm install -g surge
rm ~/Desktop/test.js
node ~/Desktop/test.js
node ~/Desktop.test.js
atom ~/Desktop/test.js
node
node -v
brew postinstall node
sudo chown -R seanstokke:admin dtrace/
sudo chown -R seanstokke:admin node_modules/
sudo !!
chown -R seanstokke:admin node_modules/
cd lib/
la
cd /usr/local/
brew install node
curl -fsSL https://git.io/vgqFH | sh
git config --global user.name 'Sean Stokke'
git config --global user.email 'sstokke17@gmail.com'
which git
git --version
brew install git
which echo
shout $PATH
echo $PATH
ech $PATH
echo $EDITOR
atom ~/.config/fish/config.fish
git push origin master
git commit -m "Formatted images"
cd prework
brew info fish
brew info
brew
fish_update_completions
curl -fsSL https://git.io/vgqFU | ruby
chsh -s /usr/local/bin/fish
echo "/usr/local/bin/fish" | sudo tee -a /etc/shells
brew install fish
brew doctor
brew update
man brew
brew help
ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
brew homebrew
ls -G
uname
unae
git commit -m "Adding my personal project"
cd..
cd your-solution
cd _06_personal-project
man sudo
sudo npm install -g bower
bower install jquery
npm install -g bower
git commit -m "CSS style and image folder"
touch imdbstyle.css
cd Stokke-Sean
mkdir Stokke-Sean
cd _03_css
git commit -m "Include solution for chapter 1"
cd .
cd Sean-Stokke
cd _02_html
git _02_html
git commit -m "Inculde solution for chapter 1 w/correct location"
cd _02_ html
git remote -v
git remote add upstream https://github.com/CodingTater/prework.git
git remote add upstream
git clone https://github.com/CodingTater/prework.git
cd seanstokke
git remote add upstream https://github.com/octocat/Spoon-Knife.git
cd Spoon-Knife
git clone https://github.com/CodingTater/Spoon-Knife.git
ssh -T git@github.com
cd Prework
cs Prework
cd Galvanize
cd Galvanie
cp -r Desktop/Galvanize seanstokke/Galvanize
cd Desktop
eval "$(ssh-agent -s)"
git clone https://github.com/gSchool/prework
git add .
cd add .
cd git-practice
git remote add origin https://github.com/CodingTater/git-practice
git commit -m "Adding another blank"
defaults write com.apple.Finder AppleShowAllFiles FALSE
git commit -m "Adding a blank"
touch blank.html
git commit -m "Trying this out"
git commit -m "First commit"
pbcopy < ~/.ssh/id_rsa.pub
git credential-osxkeychain
defaults write com.apple.finder AppleShowAllFiles TRUE;killall Finder
pbcopy <~/ .ssh/id_rsa.pub
ssh-add -l
ssh-add ~/.ssh/id_rsa
ssh-keygen -t rsa -b 4096 -C "sstokke17@gmail.com"
ssh-keygen -t rsa -b 4096 C "sstokke17@gmail.com"
ssh-keygen -t rsa
ssh-add 9a:2d:31:df:41:94:c0:ac:26:91:f5:65:f6:aa:5a:fa
eval "$(ssh-agent)"
ssh add 9a:2d:31:df:41:94:c0:ac:26:91:f5:65:f6:aa:5a:fa
ssh-add -1
git log > log.txt
git log
git commit -m 'I am adding files to git!'
git add Adding_files
git add Adding_Files
touch Adding_files
init git
mkdir git-practice
mkir git-practice
mikr git-practice
cd Fonts
cd Library
mv Nyan.ttf ~/Library/Fonts/
cd Downloads
touch unix-commands.txt
cd dd
mkdir Prework
msdir Prework
mkdir Galvanize
